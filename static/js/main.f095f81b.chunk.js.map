{"version":3,"sources":["component/Button.js","component/Header.js","component/Footer.js","component/Task.js","component/Tasks.js","component/AddTask.js","component/About.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","location","useLocation","pathname","Footer","to","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","index","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","About","App","showAddTask","setShowAddTask","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","fetchTask","addTask","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","taskToToggle","updTask","path","exact","render","props","length","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f095f81b.chunk.js","sourcesContent":["import propTypes from 'prop-types';\r\n\r\nconst Button = ({ color, text, onClick }) => {\r\n    return (\r\n        <button \r\n        onClick ={onClick}\r\n        style={{backgroundColor: color}} \r\n        className='btn'\r\n         >\r\n        {text}</button>\r\n    )\r\n}\r\n\r\nButton.defaultProps = {\r\n    color : '#b0efeb'\r\n}\r\n\r\nButton.propTypes = {\r\n    text : propTypes.string,\r\n    color: propTypes.string,\r\n    onClick : propTypes.func,\r\n}\r\n\r\nexport default Button\r\n\r\n","import {useLocation} from 'react-router-dom';\r\nimport Button from './Button';\r\n\r\n\r\nconst Header = ({title, onAdd, showAdd}) => {\r\n    \r\n    const location = useLocation();\r\n    return (\r\n        \r\n        <div className='header'>\r\n            <h1>{title}</h1>\r\n            {location.pathname === '/' && (<Button\r\n             color={showAdd ? '#e91e63' : '#31e01c'}\r\n             text={showAdd ? 'Close' : 'Add'} \r\n             onClick={onAdd}/>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title: 'Task Tracker '\r\n}\r\n\r\n// propTypes sirven para declarar los tipos de datos que vamos a usar \r\n// ejemplo\r\n// Header.propTypes = {\r\n//     title: propTypes.string\r\n// }\r\n// recordar importar el propTypes\r\n\r\n\r\nexport default Header\r\n","import {Link} from 'react-router-dom';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <p>Copyright &copy; 2021</p>   \r\n            <Link to='/about'>About</Link> \r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import {FaTimes} from 'react-icons/fa';\r\n\r\nconst Task = ({task, onDelete, onToggle}) => { \r\n    return (\r\n        <div className={` task ${ task.reminder ? 'reminder' : ''}`} \r\n             onDoubleClick={() => onToggle(task.id)}>\r\n            <h3>{task.text} <FaTimes style={{ color:'red', cursor:'pointer'}}\r\n             onClick={() =>onDelete(task.id)}\r\n              \r\n             /> </h3>\r\n            <p>{task.day}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import Task from './Task'; \r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n  \r\n\r\n    return (\r\n        <>\r\n        {tasks.map((task, index) => (\r\n        <Task key={index}\r\n             task={task} \r\n            onDelete={onDelete}\r\n            onToggle={onToggle}/>\r\n        ))}\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks;\r\n","import {useState} from 'react';\r\n\r\nconst AddTask = ( {onAdd} ) => {\r\n    const [text, setText] = useState('');\r\n    const [day, setDay] = useState('');\r\n    const [reminder, setReminder] = useState(false);\r\n\r\n    const onSubmit = (e) =>{\r\n        e.preventDefault();\r\n\r\n        if(!text){\r\n            alert('Please Add a task')\r\n            return\r\n        }\r\n\r\n        onAdd({text,day, reminder});\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n    }\r\n\r\n    return (\r\n        <form className='add-form' onSubmit={onSubmit}>\r\n            <div className='form-control'>\r\n                <label>Task</label>\r\n                <input \r\n                type='text' \r\n                placeholder='Add Task'\r\n                value={text}\r\n                onChange={(e) => setText(e.target.value)}/>\r\n            </div>\r\n            <div className='form-control'>\r\n                <label>Day and time </label>\r\n                <input \r\n                type='text' \r\n                placeholder='Add Day and Time'\r\n                value={day}\r\n                onChange={(e) => setDay(e.target.value)}/>\r\n            </div>\r\n            <div className='form-control form-control-check'>\r\n                <label> Set Reminder</label>\r\n                <input\r\n                 type='checkbox'\r\n                 checked={reminder}\r\n                 value={reminder}\r\n                onChange={(e) => setReminder(e.currentTarget.checked)} />\r\n            </div>\r\n            \r\n            <input type='submit' value='Save Task' className='btn btn-block' />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask;\r\n","import {Link} from 'react-router-dom';\r\n\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n            <h4>Version 1.0</h4>\r\n            <Link to='/'>Go back</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import {BrowserRouter as Router, Route} from 'react-router-dom';\nimport Header from './component/Header';\nimport Footer from './component/Footer';\nimport './App.css';\nimport Tasks from './component/Tasks';\nimport AddTask from './component/AddTask';\nimport About from './component/About';\nimport {useState, useEffect} from 'react'; \n\nfunction App() {\n  const [showAddTask,setShowAddTask] = useState(false)\n\n  const [tasks, setTasks] = useState([])\n\n  useEffect( () => {\n    const getTasks = async () =>{\n    const tasksFromServer = await fetchTasks()\n\n    setTasks(tasksFromServer)\n    }\n    getTasks()\n  }, []) \n\n  // Fetch Tasks\n  const fetchTasks = async() => {\n    const res = await fetch('http://localhost:5000/tasks');\n    const data = await res.json();\n   \n    return data\n  }\n\n  // Fetch Task. \n  const fetchTask = async(id) => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`);\n    const data = await res.json();\n   \n    return data\n  }\n\n  // Add task\n  const addTask = async (task) => {\n    const res = await fetch('http://localhost:5000/tasks' , {\n      method : 'POST',\n      headers : {\n        'Content-type' : 'application/json',\n      },\n      body : JSON.stringify(task),\n    })\n\n    const data = await res.json();\n    setTasks([...tasks, data])\n\n\n  // const id = Math.floor(Math.random() * 10000) + 1;\n  \n  // const newTask = {id, ...task };\n  // setTasks([...tasks, newTask])\n}\n\n\n   const deleteTask = async (id) =>{\n      await fetch(`http://localhost:5000/tasks/${id}`, {\n        method: 'DELETE',\n      })\n\n      setTasks(tasks.filter((task)=> task.id !== id))\n   }\n\n//Toggle reminder \nconst toggleReminder = async (id) =>{\n    const taskToToggle = await fetchTask(id);\n    const updTask = {...taskToToggle, \n      reminder: !taskToToggle.reminder}\n    \n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method : 'PUT',\n      headers:{\n        'Content-type' : 'application/json',\n      },\n      body: JSON.stringify(updTask)\n    })\n\n    const data = await res.json();\n\n    setTasks(\n       tasks.map((task) =>\n        task.id === id ? { ...task, reminder: data.reminder}\n       : task\n       )\n    ) \n}\n\n  return (\n    <Router>\n      <div className=\"container\">\n        <Header\n          onAdd={ () => setShowAddTask(!showAddTask)}\n          showAdd={showAddTask} />\n        <Route path='/' exact render={ (props) => (\n          <>\n            {showAddTask  &&  <AddTask  onAdd={addTask}/>}\n            {tasks.length > 0 ? (\n            <Tasks tasks={tasks}\n            onDelete={deleteTask}\n            onToggle={toggleReminder}/>\n            ):('No hay tareas pendientes')}\n          </>\n        )}/>\n        <Route path='/about' component={About}/>\n        <Footer/> \n      </div>\n    </Router>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}